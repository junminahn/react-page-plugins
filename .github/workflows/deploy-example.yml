name: Deploy Example

on:
  push:
    branches:
      - main

jobs:
  main:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Install asdf
        uses: asdf-vm/actions/setup@v1
      - uses: actions/cache@v2
        id: asdf-cache
        with:
          path: |
            /home/runner/.asdf
          key: ${{ runner.os }}-asdf-${{ hashFiles('**/.tool-versions') }}
      - name: Install asdf tools
        run: |
          cat .tool-versions | cut -f 1 -d ' ' | xargs -n 1 asdf plugin-add || true
          asdf plugin-update --all
          bash ~/.asdf/plugins/nodejs/bin/import-release-team-keyring
          asdf install
          asdf reshim
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Yarn Dependencies
        run: |
          yarn
          yarn bootstrap
          yarn llink
          yarn build

      - name: Decrypt secrets
        env:
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
        run: |
          openssl aes-256-cbc -in .github/workflows/secrets/id_rsa.enc -out .github/workflows/secrets/id_rsa -pass pass:$ENCRYPTION_KEY -d -pbkdf2

      - name: Setup SSH agent
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts

          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          chmod 0600 .github/workflows/secrets/id_rsa
          ssh-add .github/workflows/secrets/id_rsa

      - name: Deploy Example
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          rm -rf .git
          cd examples/create-react-app-typescript/build
          git init
          git config user.name "Junmin Ahn"
          git config user.email "junminahn@outlook.com"
          git config commit.gpgsign false
          git add .
          git commit -m "deploy example to github pages"
          git push --force --quiet git@github.com:junminahn/react-page-plugins.git master:example
